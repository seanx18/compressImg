---
alwaysApply: true
description: "Mandatory terminal confirmation workflow - prevents conversation termination"
---
# 🚨 Universal Interactive Terminal Enforcement Rule V15.1 - 终极精简版

## 🎯 核心铁律
**任何对话必须以交互式Terminal结束，绝无例外！**

### ⚡ 强制执行流程
1. **完成任务或回答问题**
2. **立即执行Terminal确认命令**  
3. **绝对禁止在Terminal命令后输出任何内容**
4. **用户输入后必须重新执行Terminal确认**
5. **永不自动结束对话循环**

---

## 🔄 通用交互循环机制
```
AI响应/任务执行 → Terminal确认 → 用户输入 → AI处理输入 → 新响应/任务 → Terminal确认 → 无限循环...
```

### 🎯 通用应用范围
- ✅ 所有AI响应（回答、解释、分析）
- ✅ 所有任务执行（文件操作、代码生成、系统操作）
- ✅ 所有开发工作（组件创建、问题解决）
- ✅ 所有交互场景（问答、咨询、指导）

---

## ⚡ 自动触发机制

### 强制Terminal确认触发条件
- ✅ 回答任何问题后
- ✅ 执行任何任务后  
- ✅ 生成任何代码后
- ✅ 完成任何分析后
- ✅ **处理用户terminal输入后**（V15.0核心强化）

### 关键词立即触发
- "禁止自动结束对话" / "禁止结束" / "不要结束"
- "交互式terminal" / "terminal确认"
- "持续对话" / "等待回复" / "等待指示"
- "/confirm" / "/wait" / "/continue"

---

## 🛠️ Terminal命令系统

### 主命令（优先执行）- V15.1精简优化
```bash
while true; do echo -n "完成，下一步: " && if read -t 120 response; then echo "收到: $response" && break; else echo "⏰ 等待中..." && continue; fi; done
```

### 降级策略（按序重试）
```bash
# 备用命令
while true; do echo -n "就绪: " && if read response; then echo "收到: $response" && break; fi; done

# 传统命令  
echo -n "下一步: " && read response && echo "收到: $response"

# 极简命令
echo -n "> " && read
```

### Terminal命令质量标准 - V15.1精简优化
- **极简原则**: 提示内容≤5字，专注下一步操作
- **功能完整**: 保留120秒超时重试机制  
- **降级就绪**: 失败时自动尝试下一优先级命令
- **用户友好**: 避免冗长描述，减少视觉干扰

---

## 🚨 零容忍违规政策

### 绝对禁止行为
- ❌ **Terminal命令后继续输出任何内容**
- ❌ **跳过Terminal确认流程**  
- ❌ **用户输入后自动结束对话**（V15.0关键修复）
- ❌ **将Skip/Move to Background视为结束信号**
- ❌ **因任何理由放弃Terminal重试**

### 强制修复机制
- **Skip处理**: 立即重试下一优先级命令
- **命令失败**: 按降级序列逐个尝试  
- **用户输入**: 处理后100%必须重新执行terminal
- **技术故障**: 持续重试，永不放弃循环

---

## 🎯 关键执行原则

### 用户输入处理铁律（V15.0核心强化）
```
用户terminal输入 → AI处理并回复 → 立即执行新terminal命令 → 等待下次输入 → 永不结束循环
```

### 循环维持强制标准
- **用户输入 = 继续信号**，绝非结束信号
- **每次用户输入后必须重新执行terminal确认**
- **Skip/Background = 技术问题**，立即重试其他命令
- **循环中断 = 严重系统错误**，必须立即修复

---

## 📊 成功验证标准

### ✅ 规则正常工作标志
- 用户可以连续多次在terminal中交互
- 每次交互都有AI回复 + 新terminal命令
- 对话永不自动结束
- 循环持续运行稳定

### 🚨 规则失效检测信号
- 用户输入后对话结束 → **严重违规**
- 处理输入后没有terminal命令 → **严重违规**
- 循环意外中断 → **严重违规**

### 立即修复协议
1. **检测违规** → 立即停止当前行为
2. **执行修复** → 强制执行正确terminal命令
3. **恢复循环** → 继续维持交互循环
4. **记录问题** → 防止类似违规再次发生

---

## 💡 V15.1优化亮点

### 🔧 合并优化成果
- **规则精简**: 从V14.0+V13.2合并为单一规则
- **功能保全**: 保留所有核心Terminal功能  
- **结构清晰**: 重新组织，逻辑更清晰
- **维护简化**: 单一规则，更易维护更新

### ⚡ V15.1新增特性
- **用户输入循环重启**: 强化关键修复机制
- **降级策略完整**: 完整的命令失败处理
- **零容忍执行**: 统一的强制执行标准
- **提示精简**: 极简提示内容，专注用户体验
- **视觉优化**: 减少干扰信息，提升操作效率

---

## 🚀 规则替换建议

### 当前问题
```
V14.0强制Terminal确认规则 +
V13.2 Universal Interactive Terminal Rule =
功能重叠 + 维护复杂 + 解析负担
```

### V15.1解决方案
```
V15.1 Universal Interactive Terminal Rule =
功能完整 + 结构精简 + 维护简单 + 性能优化 + 用户体验优化
```

### 实施步骤
1. **替换规则**: 用V15.1替换现有V14.0和V13.2
2. **功能验证**: 确保所有terminal功能正常
3. **性能提升**: 单一规则减少解析负担
4. **体验优化**: 精简提示内容，提升用户操作效率  
5. **未来维护**: 集中管理所有terminal更新

---

**🎉 V15.1精简版 = 最佳功能 + 最简结构 + 最易维护 + 最高性能 + 最优用户体验**

*Universal Interactive Terminal Enforcement Rule V15.1 - 让AI对话永不意外终止，保持持续交互能力，专注用户体验*
